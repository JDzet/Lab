"""
что если мы хотим что в экземпляре класса были только 2 лок. свойства
такие как x и y. Для этого и используется __slots__
+ уменьшает объем памяти занимаемую  этим классом

                  ИТОГ:
- Ограничение создоваемых локальных свойств
- Уменьшение занимаймой памяти
- ускорение работы с локальными свойствами

"""




class Point2D:
    __slots__ = ("x", "y") ## __slots__ поставил запрет на создание новых локальных свойст и можно только работать только с теми которые указаны

    def __init__(self, x, y):
        self.x = x
        self.y = y


pt2D = Point2D(1,2)
del pt2D.x
pt2D.x = 100

#-------------------------------------------------------------------------------------------------------------------
"""

Работа __slots при наследование классов

"""
class Point:
    __slots__ = ("x", "y", "lenght")

    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.lenght = (x * x + y * y) ** 0.5

class Point3D(Point):
   pass

pt3d = Point3D(1,2)
print(pt3d.lenght)

"""
Point3D не наследует коллекцию класса Point __slots__ тем саммы можно создавать другие локальные свойства
экземпляра класса 

но можно прописать __slots__ и оставить его даже пустым, тогда можно работать с х и у но, новые уже свойства 
не добавить

"""